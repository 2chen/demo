{"version":3,"sources":["../src/components/Impress.js"],"names":["html","document","documentElement","body","_lastHash","_stepsData","_activeStep","_idHelper","Impress","props","rootData","hint","hintMessage","fallbackMessage","progress","rootStyles","position","top","left","transformOrigin","transition","transformStyle","defaultData","x","y","z","rotateX","rotateY","rotateZ","scale","state","windowScale","config","impressSupported","activeStep","data","cameraStyles","startX","deltaX","init","goto","addEventListener","e","keyCode","end","home","prev","next","window","location","hash","nextPorps","setState","removeEventListener","event","console","log","defaults","width","height","maxScale","minScale","perspective","transitionDuration","classList","dataset","overflow","$set","$merge","step","id","className","duration","scrollTo","target","zoomin","delay","targetScale","transform","transitionDelay","stepsDataKeys","Object","keys","findIndex","k","length","stepsDataEntries","entries","firstStep","lastStep","touches","clientX","preventDefault","index","cloneElement","key","idHelper","initStep","bind","children","steps","Children","map","stepComponent","stepsTotal","count","handleTouchStart","handleTouchMove","handleTouchEnd"],"mappings":"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","file":"Impress.js","sourcesContent":["import React, { Component } from 'react';\nimport update from 'react/lib/update';\nimport { toNumber, computeWindowScale, css, pfx, perspective, \n         translate, rotate, scale, throttle, getElementFromHash } from './util';\n\nimport Progress from './Progress';\nimport Hint from './Hint';\n\nconst html = document.documentElement,\n      body = document.body;\n    \nlet _lastHash = \"\",\n    _stepsData = {},\n    _activeStep,\n    _idHelper = 1;\n\nexport default class Impress extends Component {\n    constructor(props){\n        super(props);\n        \n        // Setting defaults with props attributes.\n        const {\n            rootData        = {},\n            hint            = true, \n            hintMessage     = <p>Use <b>Spacebar</b> or <b>Arrow keys</b> to navigate</p>, \n            fallbackMessage = <p>Your browser <b>doesn't support the features required</b> by React-impressJS, so you are presented with a simplified version of this presentation.</p>, \n            progress        = false\n        } = props;\n        \n        const rootStyles = {\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transformOrigin: \"top left\",\n            transition: \"all 0s ease-in-out\",\n            transformStyle: \"preserve-3d\"\n        };\n        const defaultData = {\n            x: 0, y: 0, z: 0,\n            rotateX: 0, rotateY: 0, rotateZ: 0,\n            scale: 1\n        };\n        \n        // <Impress /> State\n        this.state = {\n            /** Impress Config **/\n            rootStyles,\n            windowScale: null,\n            config: null,\n            impressSupported: false,\n            \n            /** Step Status **/\n            activeStep: {\n                data: defaultData\n            },\n            \n            /** Camera Status **/\n            cameraStyles: rootStyles,\n            \n            /** Public attributes provide to use **/\n            rootData: rootData, // (not recommended)\n            hint: hint,\n            hintMessage: hintMessage,\n            fallbackMessage: fallbackMessage,\n            progress: progress,\n            \n            /** For touch event **/\n            startX: 0,\n            deltaX: 0\n        };\n    }\n    componentWillMount(){\n        // Init impress\n        this.init();\n    }\n    componentDidMount(){\n        const { impressSupported } = this.state;\n        \n        // 2017/2/28 暫時想不到好方法\n        if ( impressSupported )\n            this.goto( _activeStep, 500 );\n        \n        // Listener for keyboard event\n        document.addEventListener( \"keyup\", throttle((e) => {\n            if ( e.keyCode === 9 ||\n               ( e.keyCode >= 32 && e.keyCode <= 40 ) ) {\n                switch ( e.keyCode ) {\n                    case 35: // End\n                            this.end();\n                            break;\n                    case 36: // Home\n                            this.home();\n                            break;\n                    case 33: // Page up\n                    case 37: // Left\n                    case 38: // Up\n                            this.prev();\n                            break;\n                    case 9:  // Tab\n                    case 32: // Space\n                    case 34: // Page down\n                    case 39: // Right\n                    case 40: // Down\n                            this.next();\n                            break;\n                    default:\n                        break;\n                }\n            }\n        }, 250), false );\n        \n        // Window resize\n        window.addEventListener( \"resize\", throttle(() => {\n            if ( impressSupported )\n                this.goto( this.state.activeStep, 500 );\n        }, 250), false );\n        \n        // URL hash change\n        window.addEventListener( \"hashchange\", throttle(() => {\n            if ( window.location.hash !== _lastHash )\n                this.goto( getElementFromHash( _stepsData ), 500 );\n        }, 250), false );\n    }\n    componentWillReceiveProps( nextPorps ){\n        this.setState({\n            fallbackMessage: nextPorps.fallbackMessage,\n            hint: nextPorps.hint,\n            hintMessage: nextPorps.hintMessage\n        });\n    }\n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", function( event ) {\n            console.log(event.keyCode);\n        }, false);\n    }\n    \n    /**\n     * Initialize Impress.\n     */\n    init(){\n        const { rootData } = this.state;\n        let { windowScale, config, impressSupported } = this.state;\n        \n        const defaults = {\n            width: 1024,\n            height: 768,\n            maxScale: 1,\n            minScale: 0,\n            perspective: 1000,\n            transitionDuration: 1000\n        };\n        \n        // const ua = navigator.userAgent.toLowerCase()\n        \n        // Check impress support or not.\n        impressSupported =\n            // Browser should support CSS 3D transtorms\n            ( pfx( \"perspective\" ) !== null ) &&\n            // Browser should support `classList` and `dataset` APIs\n            ( body.classList ) &&\n            ( body.dataset );// &&\n            // But some mobile devices need to be blacklisted,\n            // because their CSS 3D support or hardware is not\n            // good enough to run impress.js properly, sorry...\n            //( ua.search( /(iphone)|(ipod)|(android)/ ) === -1 );\n        \n        // Config\n        config = {\n            width: toNumber( rootData.width, defaults.width ),\n            height: toNumber( rootData.height, defaults.height ),\n            maxScale: toNumber( rootData.maxScale, defaults.maxScale ),\n            minScale: toNumber( rootData.minScale, defaults.minScale ),\n            perspective: toNumber( rootData.perspective, defaults.perspective ),\n            transitionDuration: toNumber(\n              rootData.transitionDuration, defaults.transitionDuration\n            )\n        };\n        // Window Scale\n        windowScale = computeWindowScale( config );\n        // HTML height\n        css( html, {\n            height: \"100vh\",\n            overflow: \"hidden\"\n        });\n        // Body style\n        css( body, {\n            height: \"100vh\",\n            overflow: \"hidden\",\n            \n            // mobile devise supported\n            position: \"relative\"\n        } );\n        \n        \n        this.setState( update( this.state, {\n            windowScale: { \n                $set: windowScale\n            },\n            config: { \n                $set: config \n            },\n            impressSupported: {\n                $set: impressSupported  \n            },\n            rootStyles: {\n                $merge: {\n                    'transform': perspective( config.perspective / windowScale ) + scale( windowScale )\n                }\n            }\n        }));\n    }\n    \n    /**\n     * Initialize Steps.\n     * \n     * @param {Step} init every Steps in Impress.\n     */\n    initStep( step ){\n        // Set first Step as enter Step.\n        if ( !_activeStep )\n            _activeStep = step;\n            \n        _stepsData = update( _stepsData, {\n            $merge: {\n                [ step.id ]: {\n                    id: step.id,\n                    className: step.className,\n                    data: step.data,\n                    duration: step.duration\n                }\n            }\n        });\n    }\n    \n    /**\n     * Navigate to the SPECIFY Step.\n     * \n     * @param {Step} step you want to navigate to.\n     * @param {number} 1000 speed of navigation.\n     */\n    goto( step, duration = 1000 ) {\n        const { config, activeStep } = this.state;\n        let { windowScale } = this.state;\n        \n        window.scrollTo(0, 0);\n        \n        let target = {\n            x: -step.data.x,\n            y: -step.data.y,\n            z: -step.data.z,\n            rotateX: -step.data.rotateX,\n            rotateY: -step.data.rotateY,\n            rotateZ: -step.data.rotateZ,\n            scale: 1 / step.data.scale\n        };\n        \n        // Check scale for zoom-in\n        let zoomin = target.scale >= ( 1 / activeStep.data.scale );\n        \n        duration = toNumber( duration, config.transitionDuration );\n        let delay = ( duration / 2 );\n        \n        if ( step.id === activeStep.id )\n            windowScale = computeWindowScale( config );\n        \n        let targetScale = target.scale * windowScale;\n        \n        this.setState( update( this.state, {\n            activeStep: {\n                $set: step\n            },\n            rootStyles: {\n                transform: {\n                    $set: perspective( config.perspective / targetScale ) + scale( targetScale ),\n                },\n                transitionDuration: {\n                    $set: duration + \"ms\"\n                },\n                transitionDelay: {\n                    $set: ( zoomin ? delay : 0 ) + \"ms\" \n                }\n            },\n            cameraStyles: {\n                transform: {\n                    $set: rotate( target, true ) + translate( target ),\n                },\n                transitionDuration: {\n                    $set: duration + \"ms\"\n                },\n                transitionDelay: {\n                    $set: ( zoomin ? 0 : delay ) + \"ms\"\n                }\n            }\n        }));\n        \n        window.location.hash = _lastHash = \"#/\" + step.id;\n    }\n    \n    // Navigate to the PREVIOUS Step.\n    prev(){\n        const { activeStep } = this.state;\n        \n        /** \n         * 2017.04.10\n         * Why we don't use Object.entries() or Object.values() any more ?\n         * Cause the browser of iOS devise (Chrome, Safari...) and some of Android devise\n         * DOES'NT supported Object.entries() and Object.values() now...\n         */\n        // const stepsDataEntries = Object.entries( _stepsData );\n        // let prev = stepsDataEntries.findIndex( ([k, v]) => { return k === activeStep.id } ) - 1;\n        // prev = prev >= 0 ? stepsDataEntries[ prev ][1] : stepsDataEntries[ stepsDataEntries.length - 1 ][1];\n        \n        const stepsDataKeys = Object.keys( _stepsData );\n        // get index of previous\n        let prev = stepsDataKeys.findIndex( k => k === activeStep.id ) -1;\n        \n        // get id via index from stepsData\n        prev = prev >= 0 ? stepsDataKeys[ prev ] : stepsDataKeys[ stepsDataKeys.length - 1 ];\n        \n        // get previous step\n        prev = _stepsData[ prev ];\n\n        this.goto( prev, prev.duration );\n    }\n    \n    // Navigate to the NEXT Step.\n    next(){\n        const { activeStep } = this.state;\n        const stepsDataKeys = Object.keys( _stepsData );\n        let next = stepsDataKeys.findIndex( k => k === activeStep.id ) + 1;\n        next = next < stepsDataKeys.length ? stepsDataKeys[ next ] : stepsDataKeys[ 0 ];\n        next = _stepsData[ next ];\n            \n        this.goto( next, next.duration );\n    }\n    \n    // Navigate to the FIRST Step.\n    home(){\n        const stepsDataEntries = Object.entries( _stepsData );\n        const firstStep = stepsDataEntries[ 0 ][1];\n        \n        this.goto( firstStep, firstStep.duration );\n    }\n    \n    // Navigate to the LAST Step.\n    end(){\n        const stepsDataEntries = Object.entries( _stepsData );\n        const lastStep = stepsDataEntries[ stepsDataEntries.length - 1 ][1];\n        \n        this.goto( lastStep, lastStep.duration );\n    }\n    \n    // Touch Start( record start position: startX )\n    handleTouchStart(e){\n        this.setState({\n            startX: e.touches[0].clientX\n        });\n    }\n    \n    // Touch Move( Calculate touch move path: deltaX )\n    handleTouchMove(e){\n        e.preventDefault();\n        this.setState({\n            deltaX: this.state.startX - e.touches[0].clientX\n        });\n    }\n    \n    // Touch End( decide navigate previous or next Step via 'deltaX' )\n    handleTouchEnd(e){\n        if ( this.state.deltaX > 0 ) // slide left\n            this.next();\n        else if ( this.state.deltaX < 0 ) // slide right\n            this.prev();\n\n        // reset\n        this.setState({\n            deltaX: 0\n        });\n    }\n    \n    /**\n     * Create <Step />\n     * \n     * @return {Step} to render children.\n     */\n    stepComponent( step, index ){\n        const { activeStep } = this.state;\n        \n        return React.cloneElement( step, {\n                    key: index,\n                    idHelper: step.props.id ? '' : _idHelper++,\n                    activeStep: activeStep,\n                    initStep: this.initStep.bind(this),\n                    goto: this.goto.bind(this)\n                }, step.props.children );\n    }\n    \n    render() {\n        const { \n            impressSupported,\n            rootStyles, cameraStyles, activeStep, \n            hint, hintMessage, \n            fallbackMessage, \n            progress\n        } = this.state;\n        const steps = React.Children.map( this.props.children, this.stepComponent.bind(this) );\n        const stepsTotal = React.Children.count(this.props.children) ;\n        \n        return (\n            <div id=\"react-impressjs\" \n                 className={ \n                    (impressSupported ? 'impress-supported' : 'impress-not-supported') + \n                    (activeStep ? ' impress-on-' + activeStep.id : '') + ' impress-enabled' \n                 }\n                 onTouchStart={ this.handleTouchStart.bind(this) }\n                 onTouchMove={ this.handleTouchMove.bind(this) }\n                 onTouchEnd={ this.handleTouchEnd.bind(this) }>\n                 \n                <div id=\"impress\" style={ rootStyles }>\n                    <div style={ cameraStyles }>\n                    { \n                        impressSupported ? steps : \n                        <div className=\"fallback-message\">{ fallbackMessage }</div>\n                    }\n                    </div>\n                </div>\n                <Hint \n                    hint={ hint }\n                    stepsData={ _stepsData }\n                    activeStep={ activeStep }\n                    hintMessage={hintMessage} />\n                <Progress\n                    progress={ progress }\n                    stepsData={ _stepsData } \n                    activeStep={ activeStep } \n                    stepsTotal={ stepsTotal } />\n            </div>\n        );\n    }\n}"]}