{"version":3,"sources":["../src/components/Progress.js"],"names":["Progress","props","progress","stepsData","activeStep","stepsTotal","color_gold","color_gray","ua","navigator","userAgent","toLowerCase","progressWidth","search","currentStepIndex","Object","keys","findIndex","s","id","percent","parseInt","position","bottom","width","display","fontSize","color","textAlign","opacity","paddingLeft"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;IAEqBA,Q;;;;;;;;;;;iCACR;AAAA,yBACmD,KAAKC,KADxD;AAAA,gBACGC,QADH,UACGA,QADH;AAAA,gBACaC,SADb,UACaA,SADb;AAAA,gBACwBC,UADxB,UACwBA,UADxB;AAAA,gBACoCC,UADpC,UACoCA,UADpC;;AAEL,gBAAMC,aAAa,SAAnB;AAAA,gBACMC,aAAa,SADnB;AAEA,gBAAMC,KAAKC,UAAUC,SAAV,CAAoBC,WAApB,EAAX;AACA,gBAAMC,gBAAkBJ,GAAGK,MAAH,CAAW,2BAAX,MAA6C,CAAC,CAAhD,GAAsD,GAAtD,GAA4D,CAAlF;AACA,gBAAIC,mBAAmBC,OAAOC,IAAP,CAAYb,SAAZ,EAAuBc,SAAvB,CAAiC,UAACC,CAAD;AAAA,uBAAMA,MAAMd,WAAWe,EAAvB;AAAA,aAAjC,IAA8D,CAArF;AACA,gBAAIC,UAAUC,SAASP,mBAAiBT,UAAjB,GAA8B,GAAvC,EAA4C,EAA5C,CAAd;;AAEA,mBACI;AAAA;AAAA,kBAAK,OAAO,EAACiB,UAAS,OAAV,EAAmBC,QAAO,MAA1B,EAAkCC,OAAM,MAAxC,EAAgDC,SAASvB,WAAW,OAAX,GAAqB,MAA9E,EAAZ;AACI;AAAA;AAAA,sBAAG,OAAO,EAACwB,UAAS,EAAV,EAAcC,OAAOpB,UAArB,EAAiCqB,WAAU,QAA3C,EAAqDC,SAAS,EAA9D,EAAV;AACI;AAAA;AAAA;AACMf,wCADN;AAEI;AAAA;AAAA,8BAAM,OAAO,EAACgB,aAAY,CAAb,EAAgBJ,UAAS,EAAzB,EAAb;AAA4C,kCAAMrB;AAAlD;AAFJ;AADJ,iBADJ;AAOI,kEAAM,SAASe,OAAf;AACM,mCAAc,QADpB;AAEM,iCAAcR,aAFpB,EAEoC,aAAcN,UAFlD;AAGM,gCAAaM,aAHnB,EAGmC,YAAaL,UAHhD;AAPJ,aADJ;AAcH;;;;;;kBAxBgBP,Q","file":"Progress.js","sourcesContent":["import React, { Component } from 'react';\nimport { Line } from 'rc-progress';\n\nexport default class Progress extends Component {\n    render() {\n        const { progress, stepsData, activeStep, stepsTotal } = this.props;\n        const color_gold = '#e5b560',\n              color_gray = '#3e4852';\n        const ua = navigator.userAgent.toLowerCase();\n        const progressWidth = ( ua.search( /(iphone)|(ipod)|(android)/ ) === -1 ) ? 0.2 : 1;\n        let currentStepIndex = Object.keys(stepsData).findIndex((s)=> s === activeStep.id) + 1;\n        let percent = parseInt(currentStepIndex/stepsTotal * 100, 10);\n        \n        return (\n            <div style={{position:'fixed', bottom:'-3px', width:'100%', display: progress ? 'block' : 'none'}}>\n                <p style={{fontSize:20, color: color_gray, textAlign:'center', opacity: .5}}>\n                    <span>\n                        { currentStepIndex }\n                        <span style={{paddingLeft:1, fontSize:13}}>{'/' + stepsTotal}</span>\n                    </span>\n                </p>\n                <Line percent={percent} \n                      strokeLinecap='square'\n                      strokeWidth={ progressWidth } strokeColor={ color_gold }\n                      trailWidth={ progressWidth } trailColor={ color_gray } />\n            </div>\n        );\n    }\n}"]}